{
  "openapi": "3.0.3",
  "info": {
    "title": "NetPilot Proxy Rules API",
    "description": "API endpoints for managing proxy rules and traffic routing configurations",
    "version": "1.0.0",
    "contact": {
      "name": "NetPilot Support",
      "email": "support@netpilot.local"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001/api/v1",
      "description": "Development server"
    },
    {
      "url": "https://api.seudominio.com/api/v1",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Proxy Rules",
      "description": "Traffic routing and load balancing rule management"
    }
  ],
  "paths": {
    "/proxy-rules": {
      "get": {
        "tags": ["Proxy Rules"],
        "summary": "List proxy rules",
        "description": "Retrieve paginated list of proxy rules with filtering",
        "operationId": "listProxyRules",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {"$ref": "#/components/parameters/Page"},
          {"$ref": "#/components/parameters/Limit"},
          {
            "name": "domain_id",
            "in": "query",
            "schema": {"type": "integer"},
            "description": "Filter by domain ID"
          },
          {
            "name": "enabled",
            "in": "query",
            "schema": {"type": "boolean"},
            "description": "Filter by enabled status"
          }
        ],
        "responses": {
          "200": {
            "description": "Proxy rules retrieved successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ProxyRulesListResponse"}
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Proxy Rules"],
        "summary": "Create proxy rule",
        "description": "Create a new proxy rule for traffic routing",
        "operationId": "createProxyRule",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/CreateProxyRuleRequest"},
              "examples": {
                "api_proxy": {
                  "summary": "API proxy rule",
                  "value": {
                    "domain_id": 1,
                    "source_path": "/api",
                    "target_url": "http://backend:3001",
                    "enabled": true,
                    "load_balancing_method": "round_robin",
                    "health_check_url": "http://backend:3001/health",
                    "timeout_seconds": 30,
                    "retry_attempts": 3
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Proxy rule created successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ProxyRuleResponse"}
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}
              }
            }
          }
        }
      }
    },
    "/proxy-rules/{id}": {
      "get": {
        "tags": ["Proxy Rules"],
        "summary": "Get proxy rule",
        "operationId": "getProxyRule",
        "security": [{"bearerAuth": []}],
        "parameters": [{"$ref": "#/components/parameters/ProxyRuleId"}],
        "responses": {
          "200": {
            "description": "Proxy rule retrieved",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ProxyRuleDetailResponse"}
              }
            }
          },
          "404": {"$ref": "#/components/responses/NotFoundError"}
        }
      },
      "put": {
        "tags": ["Proxy Rules"],
        "summary": "Update proxy rule",
        "operationId": "updateProxyRule",
        "security": [{"bearerAuth": []}],
        "parameters": [{"$ref": "#/components/parameters/ProxyRuleId"}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/UpdateProxyRuleRequest"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Proxy rule updated",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ProxyRuleResponse"}
              }
            }
          },
          "404": {"$ref": "#/components/responses/NotFoundError"}
        }
      },
      "delete": {
        "tags": ["Proxy Rules"],
        "summary": "Delete proxy rule",
        "operationId": "deleteProxyRule",
        "security": [{"bearerAuth": []}],
        "parameters": [{"$ref": "#/components/parameters/ProxyRuleId"}],
        "responses": {
          "204": {"description": "Proxy rule deleted"},
          "404": {"$ref": "#/components/responses/NotFoundError"}
        }
      }
    },
    "/proxy-rules/apply": {
      "post": {
        "tags": ["Proxy Rules"],
        "summary": "Apply proxy configuration",
        "description": "Generate and apply proxy configurations to Nginx/Traefik",
        "operationId": "applyProxyConfiguration",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Configuration applied successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string", "example": "Configuration applied successfully"},
                    "applied_rules": {"type": "integer", "example": 5},
                    "generated_configs": {
                      "type": "array",
                      "items": {"type": "string"},
                      "example": ["nginx/example.com.conf", "traefik/dynamic.yml"]
                    },
                    "timestamp": {"type": "string", "format": "date-time"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/proxy-rules/{id}/test": {
      "post": {
        "tags": ["Proxy Rules"],
        "summary": "Test proxy rule",
        "description": "Test connectivity and response from target URL",
        "operationId": "testProxyRule",
        "security": [{"bearerAuth": []}],
        "parameters": [{"$ref": "#/components/parameters/ProxyRuleId"}],
        "responses": {
          "200": {
            "description": "Test completed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "response_time_ms": {"type": "integer"},
                    "status_code": {"type": "integer"},
                    "error": {"type": "string", "nullable": true},
                    "timestamp": {"type": "string", "format": "date-time"}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {"type": "http", "scheme": "bearer", "bearerFormat": "JWT"}
    },
    "parameters": {
      "Page": {
        "name": "page",
        "in": "query",
        "schema": {"type": "integer", "minimum": 1, "default": 1}
      },
      "Limit": {
        "name": "limit",
        "in": "query",
        "schema": {"type": "integer", "minimum": 1, "maximum": 100, "default": 10}
      },
      "ProxyRuleId": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {"type": "integer", "minimum": 1}
      }
    },
    "responses": {
      "NotFoundError": {
        "description": "Proxy rule not found",
        "content": {
          "application/json": {
            "schema": {"$ref": "#/components/schemas/ErrorResponse"}
          }
        }
      }
    },
    "schemas": {
      "CreateProxyRuleRequest": {
        "type": "object",
        "required": ["domain_id", "source_path", "target_url"],
        "properties": {
          "domain_id": {"type": "integer", "minimum": 1},
          "source_path": {"type": "string", "pattern": "^/.*", "example": "/api"},
          "target_url": {"type": "string", "format": "uri", "example": "http://backend:3001"},
          "enabled": {"type": "boolean", "default": true},
          "load_balancing_method": {
            "type": "string",
            "enum": ["round_robin", "least_connections", "ip_hash", "weighted"],
            "default": "round_robin"
          },
          "health_check_url": {"type": "string", "format": "uri", "nullable": true},
          "timeout_seconds": {"type": "integer", "minimum": 1, "maximum": 300, "default": 30},
          "retry_attempts": {"type": "integer", "minimum": 0, "maximum": 10, "default": 3},
          "headers": {
            "type": "object",
            "additionalProperties": {"type": "string"},
            "description": "Custom headers to add to proxied requests"
          },
          "strip_path": {"type": "boolean", "default": false, "description": "Strip source path from target URL"},
          "preserve_host": {"type": "boolean", "default": false, "description": "Preserve original host header"}
        }
      },
      "UpdateProxyRuleRequest": {
        "type": "object",
        "properties": {
          "source_path": {"type": "string", "pattern": "^/.*"},
          "target_url": {"type": "string", "format": "uri"},
          "enabled": {"type": "boolean"},
          "load_balancing_method": {
            "type": "string",
            "enum": ["round_robin", "least_connections", "ip_hash", "weighted"]
          },
          "health_check_url": {"type": "string", "format": "uri", "nullable": true},
          "timeout_seconds": {"type": "integer", "minimum": 1, "maximum": 300},
          "retry_attempts": {"type": "integer", "minimum": 0, "maximum": 10},
          "headers": {"type": "object", "additionalProperties": {"type": "string"}},
          "strip_path": {"type": "boolean"},
          "preserve_host": {"type": "boolean"}
        }
      },
      "ProxyRuleResponse": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "domain_id": {"type": "integer"},
          "source_path": {"type": "string"},
          "target_url": {"type": "string"},
          "enabled": {"type": "boolean"},
          "load_balancing_method": {"type": "string"},
          "health_check_url": {"type": "string", "nullable": true},
          "timeout_seconds": {"type": "integer"},
          "retry_attempts": {"type": "integer"},
          "headers": {"type": "object"},
          "strip_path": {"type": "boolean"},
          "preserve_host": {"type": "boolean"},
          "created_at": {"type": "string", "format": "date-time"},
          "updated_at": {"type": "string", "format": "date-time"}
        }
      },
      "ProxyRuleDetailResponse": {
        "allOf": [
          {"$ref": "#/components/schemas/ProxyRuleResponse"},
          {
            "type": "object",
            "properties": {
              "domain": {
                "type": "object",
                "properties": {
                  "id": {"type": "integer"},
                  "domain": {"type": "string"}
                }
              },
              "health_status": {
                "type": "object",
                "properties": {
                  "healthy": {"type": "boolean"},
                  "last_check": {"type": "string", "format": "date-time"},
                  "response_time_ms": {"type": "integer", "nullable": true},
                  "error": {"type": "string", "nullable": true}
                }
              },
              "stats": {
                "type": "object",
                "properties": {
                  "requests_24h": {"type": "integer"},
                  "avg_response_time_ms": {"type": "number"},
                  "error_rate": {"type": "number"}
                }
              }
            }
          }
        ]
      },
      "ProxyRulesListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {"$ref": "#/components/schemas/ProxyRuleResponse"},
                {
                  "type": "object",
                  "properties": {
                    "domain": {
                      "type": "object",
                      "properties": {
                        "id": {"type": "integer"},
                        "domain": {"type": "string"}
                      }
                    }
                  }
                }
              ]
            }
          },
          "pagination": {"$ref": "#/components/schemas/PaginationResponse"}
        }
      },
      "PaginationResponse": {
        "type": "object",
        "properties": {
          "page": {"type": "integer"},
          "limit": {"type": "integer"},
          "total": {"type": "integer"},
          "total_pages": {"type": "integer"}
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {"type": "string"},
              "message": {"type": "string"},
              "timestamp": {"type": "string", "format": "date-time"},
              "path": {"type": "string"}
            }
          }
        }
      },
      "ValidationErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {"type": "string", "example": "VALIDATION_ERROR"},
              "message": {"type": "string"},
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {"type": "string"},
                    "message": {"type": "string"}
                  }
                }
              },
              "timestamp": {"type": "string", "format": "date-time"},
              "path": {"type": "string"}
            }
          }
        }
      }
    }
  }
}