{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(chmod:*)",
      "Bash(npm test:*)",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Bash(cp:*)",
      "Bash(systemctl status:*)",
      "Bash(service postgresql:*)",
      "Bash(node:*)",
      "Bash(npm run start:dev:*)",
      "Bash(npm run dev:*)",
      "Bash(sudo chown:*)",
      "Bash(curl:*)",
      "Bash(npx cypress run:*)",
      "Bash(pkill:*)",
      "Bash(brew services:*)",
      "Bash(npm install:*)",
      "Bash(npx ts-node:*)",
      "Bash(netstat:*)",
      "Bash(ss:*)",
      "Bash(lsof:*)",
      "Bash(nc:*)",
      "Bash(ip route:*)",
      "Bash(awk:*)",
      "Bash(sudo:*)",
      "Bash(tree:*)",
      "Bash(./scripts/test-suite.sh:*)",
      "Bash(npm run test:unit:*)",
      "Bash(npm run build:*)",
      "Bash(npx tsc:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(npm run lint)",
      "Bash(grep:*)",
      "Bash(psql:*)",
      "Bash(openssl req:*)",
      "Bash(for domain in meadadigital.com suinda.meadadigital.com bangalo.meadadigital.com)",
      "Bash(do)",
      "Bash(done)",
      "Bash(npm run typeorm:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm uninstall:*)",
      "Bash(cat:*)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluQG5ldHBpbG90LmxvY2FsIiwic3ViIjoiZTg1ZmYxOTEtNDIyMy00MmM2LTkxOWQtMWYyMzM3NjY3YmIzIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzU4OTUzODU1LCJleHAiOjE3NTk1NTg2NTV9.CMwhTQqvzsTJFBHMR5nrM-2l4UBlhiWwupT2IV902kE\")",
      "Bash(DATABASE_URL=postgresql://netpilot:netpilot123@localhost:5432/netpilot npm run start:dev)",
      "Bash(export DATABASE_URL=\"postgresql://netpilot:netpilot123@localhost:5432/netpilot\")",
      "Bash(export REDIS_HOST=localhost)",
      "Bash(export REDIS_PORT=6379)",
      "Bash(python3:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(python -m pytest tests/ -v)",
      "Bash(xargs kill:*)",
      "Bash(python:*)",
      "Bash(PORT=8001 python main.py)",
      "Bash(PORT=3005 npm run start:dev)",
      "WebFetch(domain:netpilot.meadadigital.com)",
      "Bash(npm run:*)",
      "Read(//home/projects/deit/frontend/src/contexts/**)",
      "Read(//home/projects/deit/frontend/src/app/admin/provider-benefits/**)",
      "Read(//home/projects/deit/frontend/src/types/**)",
      "Read(//home/projects/deit/frontend/**)",
      "Bash(git checkout:*)",
      "Bash(timeout 5 curl -s \"http://localhost:3001/api/docker/containers/8a584ae39c6f/logs\")",
      "Bash(timeout:*)",
      "Read(//tmp/**)",
      "Bash(kill:*)",
      "Bash(xargs -r docker rm -f)",
      "Bash(netpilot_frontend:latest)",
      "Bash(git rev-list:*)",
      "Bash(git rm:*)",
      "Bash(git reset:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git add:*)",
      "Bash(for file in job-executions/page.tsx console/page.tsx terminal/page.tsx settings/page.tsx)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(git log:*)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluQG5ldHBpbG90LmxvY2FsIiwic3ViIjoiZTg1ZmYxOTEtNDIyMy00MmM2LTkxOWQtMWYyMzM3NjY3YmIzIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzU5MzQzODIzLCJleHAiOjE3NTk5NDg2MjN9.ymyghj1EUx-T5VSsSQndjWpQ_xD8KhSEsCc4m1c97gs\")",
      "Read(//home/**)",
      "Read(///**)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluQG5ldHBpbG90LmxvY2FsIiwic3ViIjoiZTg1ZmYxOTEtNDIyMy00MmM2LTkxOWQtMWYyMzM3NjY3YmIzIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzU5NTQ5NjAyLCJleHAiOjE3NjAxNTQ0MDJ9.nbJvp52tnAQjsADXN4BDxY5FRuEYfcSZcRZOqVbswR0\")",
      "Bash(/tmp/test-job-flow.sh:*)",
      "Bash(/tmp/test-metadata-fix.sh:*)",
      "Bash(/tmp/test-final-completo.sh:*)",
      "Bash(/tmp/test-criacao-manual.sh:*)",
      "Bash(/tmp/test-chat-flow.sh:*)",
      "Bash(/tmp/test-logs.sh:*)",
      "Bash(/tmp/test-websocket-realtime.sh:*)",
      "Bash(/tmp/test-queue-filter.sh:*)",
      "Bash(/tmp/test-websocket-live.sh:*)",
      "Bash(export:*)",
      "Bash(claude --version)",
      "Bash(./scripts/setup-claude-agents.sh:*)",
      "Bash(su -s /bin/bash bender -c 'cd /home/deit/code && claude --continue \"\"liste os arquivos do diretorio atual\"\"')",
      "Bash(su -s /bin/bash marvin -c 'cd /home/deit/code && claude --continue \"\"crie um arquivo README.md com o titulo Projeto Deit\"\"')",
      "Bash(su -s /bin/bash bender -c 'cat /home/bender/.claude/.credentials.json')",
      "Bash(su -s /bin/bash marvin -c 'cd /home/deit/code && claude --continue --verbose \"\"\"\"crie um arquivo teste.txt com o conteudo Hello World\"\"\"\"')",
      "Bash(su -s /bin/bash marvin -c 'cd /home/deit/code && claude --continue \"\"liste os arquivos do diretorio atual\"\" 2>&1')",
      "Bash(su -s /bin/bash marvin -c 'cd /home/deit/code && claude --continue --print --permission-mode bypassPermissions \"\"liste os arquivos do diretorio atual\"\"')",
      "Bash(xargs -r kill -9)",
      "Bash(su -s /bin/bash marvin -c 'cd /home/deit/code && claude --continue --print --permission-mode bypassPermissions \"\"\"\"liste os arquivos do diretorio atual\"\"\"\" 2>&1')",
      "Bash(su -s /bin/bash marvin -c 'cd /home/deit/code && echo \"\"what is 2+2?\"\" | timeout 15 claude -p --permission-mode bypassPermissions 2>&1')",
      "Bash(su -s /bin/bash marvin -c 'cd /home/deit/code && timeout 15 claude -p --continue --permission-mode bypassPermissions \"\"what is 2+2\"\" 2>&1')",
      "Bash(/home/projects/netpilot/scripts/setup-claude-agents.sh:*)",
      "Bash(su -s /bin/bash bender -c 'cd /home/deit/code && timeout 15 claude -p --permission-mode bypassPermissions \"\"what is 2+2?\"\" 2>&1')",
      "Bash(su -s /bin/bash marvin -c 'cd /home/deit/code && timeout 15 claude -p --permission-mode bypassPermissions \"\"crie um arquivo teste.txt com o conteudo Hello World\"\" 2>&1')"
    ],
    "deny": [],
    "ask": []
  }
}
